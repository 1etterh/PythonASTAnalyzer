// AST
digraph {
	node0 [label="0: Module" shape=box]
	node1 [label="1: FunctionDef\n(name: compute)" shape=box]
	node2 [label="2: arguments" shape=box]
	node3 [label="3: arg\n(arg: x)" shape=box]
	node2 -> node3 [label="args[]"]
	node4 [label="4: arg\n(arg: y)" shape=box]
	node2 -> node4 [label="args[]"]
	node1 -> node2 [label=args]
	node5 [label="5: Assign\n(value: x + y)" shape=box]
	node6 [label="6: Name\n(id: result)" shape=box]
	node7 [label="7: Store" shape=box]
	node6 -> node7 [label=ctx]
	node5 -> node6 [label="targets[]"]
	node8 [label="8: BinOp" shape=box]
	node9 [label="9: Name\n(id: x)" shape=box]
	node10 [label="10: Load" shape=box]
	node9 -> node10 [label=ctx]
	node8 -> node9 [label=left]
	node11 [label="11: Add" shape=box]
	node8 -> node11 [label=op]
	node12 [label="12: Name\n(id: y)" shape=box]
	node13 [label="13: Load" shape=box]
	node12 -> node13 [label=ctx]
	node8 -> node12 [label=right]
	node5 -> node8 [label=value]
	node1 -> node5 [label="body[]"]
	node14 [label="14: Return\n(value: result)" shape=box]
	node15 [label="15: Name\n(id: result)" shape=box]
	node16 [label="16: Load" shape=box]
	node15 -> node16 [label=ctx]
	node14 -> node15 [label=value]
	node1 -> node14 [label="body[]"]
	node0 -> node1 [label="body[]"]
	node17 [label="17: ClassDef\n(name: Example)" shape=box]
	node18 [label="18: FunctionDef\n(name: method)" shape=box]
	node19 [label="19: arguments" shape=box]
	node20 [label="20: arg\n(arg: self)" shape=box]
	node19 -> node20 [label="args[]"]
	node18 -> node19 [label=args]
	node21 [label="21: Pass" shape=box]
	node18 -> node21 [label="body[]"]
	node17 -> node18 [label="body[]"]
	node0 -> node17 [label="body[]"]
	node22 [label="22: Assign\n(value: 0)" shape=box]
	node23 [label="23: Name\n(id: x)" shape=box]
	node24 [label="24: Store" shape=box]
	node23 -> node24 [label=ctx]
	node22 -> node23 [label="targets[]"]
	node25 [label="25: Constant" shape=box]
	node22 -> node25 [label=value]
	node0 -> node22 [label="body[]"]
	node26 [label="26: For" shape=box]
	node27 [label="27: Name\n(id: i)" shape=box]
	node28 [label="28: Store" shape=box]
	node27 -> node28 [label=ctx]
	node26 -> node27 [label=target]
	node29 [label="29: Call" shape=box]
	node30 [label="30: Name\n(id: range)" shape=box]
	node31 [label="31: Load" shape=box]
	node30 -> node31 [label=ctx]
	node29 -> node30 [label=func]
	node32 [label="32: Constant" shape=box]
	node29 -> node32 [label="args[]"]
	node26 -> node29 [label=iter]
	node33 [label="33: Expr\n(value: compute(i, i + 1))" shape=box]
	node34 [label="34: Call" shape=box]
	node35 [label="35: Name\n(id: compute)" shape=box]
	node36 [label="36: Load" shape=box]
	node35 -> node36 [label=ctx]
	node34 -> node35 [label=func]
	node37 [label="37: Name\n(id: i)" shape=box]
	node38 [label="38: Load" shape=box]
	node37 -> node38 [label=ctx]
	node34 -> node37 [label="args[]"]
	node39 [label="39: BinOp" shape=box]
	node40 [label="40: Name\n(id: i)" shape=box]
	node41 [label="41: Load" shape=box]
	node40 -> node41 [label=ctx]
	node39 -> node40 [label=left]
	node42 [label="42: Add" shape=box]
	node39 -> node42 [label=op]
	node43 [label="43: Constant" shape=box]
	node39 -> node43 [label=right]
	node34 -> node39 [label="args[]"]
	node33 -> node34 [label=value]
	node26 -> node33 [label="body[]"]
	node44 [label="44: AugAssign\n(value: i)" shape=box]
	node45 [label="45: Name\n(id: x)" shape=box]
	node46 [label="46: Store" shape=box]
	node45 -> node46 [label=ctx]
	node44 -> node45 [label=target]
	node47 [label="47: Add" shape=box]
	node44 -> node47 [label=op]
	node48 [label="48: Name\n(id: i)" shape=box]
	node49 [label="49: Load" shape=box]
	node48 -> node49 [label=ctx]
	node44 -> node48 [label=value]
	node26 -> node44 [label="body[]"]
	node0 -> node26 [label="body[]"]
}
