// AST
digraph {
	node0 [label="0: Module" shape=box]
	node1 [label="1: ClassDef" shape=box]
	node2 [label="2: FunctionDef" shape=box]
	node3 [label="3: arguments" shape=box]
	node4 [label="4: arg" shape=box]
	node3 -> node4 [label="args[]"]
	node5 [label="5: arg" shape=box]
	node3 -> node5 [label="args[]"]
	node6 [label="6: arg" shape=box]
	node3 -> node6 [label="args[]"]
	node2 -> node3 [label=args]
	node7 [label="7: Return" shape=box]
	node8 [label="8: BinOp" shape=box]
	node9 [label="9: Name" shape=box]
	node10 [label="10: Load" shape=box]
	node9 -> node10 [label=ctx]
	node8 -> node9 [label=left]
	node11 [label="11: Add" shape=box]
	node8 -> node11 [label=op]
	node12 [label="12: Name" shape=box]
	node13 [label="13: Load" shape=box]
	node12 -> node13 [label=ctx]
	node8 -> node12 [label=right]
	node7 -> node8 [label=value]
	node2 -> node7 [label="body[]"]
	node1 -> node2 [label="body[]"]
	node0 -> node1 [label="body[]"]
	node14 [label="14: FunctionDef" shape=box]
	node15 [label="15: arguments" shape=box]
	node16 [label="16: arg" shape=box]
	node15 -> node16 [label="args[]"]
	node17 [label="17: arg" shape=box]
	node15 -> node17 [label="args[]"]
	node14 -> node15 [label=args]
	node18 [label="18: Assign" shape=box]
	node19 [label="19: Name" shape=box]
	node20 [label="20: Store" shape=box]
	node19 -> node20 [label=ctx]
	node18 -> node19 [label="targets[]"]
	node21 [label="21: BinOp" shape=box]
	node22 [label="22: Name" shape=box]
	node23 [label="23: Load" shape=box]
	node22 -> node23 [label=ctx]
	node21 -> node22 [label=left]
	node24 [label="24: Add" shape=box]
	node21 -> node24 [label=op]
	node25 [label="25: Name" shape=box]
	node26 [label="26: Load" shape=box]
	node25 -> node26 [label=ctx]
	node21 -> node25 [label=right]
	node18 -> node21 [label=value]
	node14 -> node18 [label="body[]"]
	node27 [label="27: Return" shape=box]
	node28 [label="28: Name" shape=box]
	node29 [label="29: Load" shape=box]
	node28 -> node29 [label=ctx]
	node27 -> node28 [label=value]
	node14 -> node27 [label="body[]"]
	node0 -> node14 [label="body[]"]
	node30 [label="30: Assign" shape=box]
	node31 [label="31: Name" shape=box]
	node32 [label="32: Store" shape=box]
	node31 -> node32 [label=ctx]
	node30 -> node31 [label="targets[]"]
	node33 [label="33: Constant" shape=box]
	node30 -> node33 [label=value]
	node0 -> node30 [label="body[]"]
	node34 [label="34: For" shape=box]
	node35 [label="35: Name" shape=box]
	node36 [label="36: Store" shape=box]
	node35 -> node36 [label=ctx]
	node34 -> node35 [label=target]
	node37 [label="37: Call" shape=box]
	node38 [label="38: Name" shape=box]
	node39 [label="39: Load" shape=box]
	node38 -> node39 [label=ctx]
	node37 -> node38 [label=func]
	node40 [label="40: Constant" shape=box]
	node37 -> node40 [label="args[]"]
	node34 -> node37 [label=iter]
	node41 [label="41: Expr" shape=box]
	node42 [label="42: Call" shape=box]
	node43 [label="43: Name" shape=box]
	node44 [label="44: Load" shape=box]
	node43 -> node44 [label=ctx]
	node42 -> node43 [label=func]
	node45 [label="45: Name" shape=box]
	node46 [label="46: Load" shape=box]
	node45 -> node46 [label=ctx]
	node42 -> node45 [label="args[]"]
	node47 [label="47: BinOp" shape=box]
	node48 [label="48: Name" shape=box]
	node49 [label="49: Load" shape=box]
	node48 -> node49 [label=ctx]
	node47 -> node48 [label=left]
	node50 [label="50: Add" shape=box]
	node47 -> node50 [label=op]
	node51 [label="51: Constant" shape=box]
	node47 -> node51 [label=right]
	node42 -> node47 [label="args[]"]
	node41 -> node42 [label=value]
	node34 -> node41 [label="body[]"]
	node52 [label="52: AugAssign" shape=box]
	node53 [label="53: Name" shape=box]
	node54 [label="54: Store" shape=box]
	node53 -> node54 [label=ctx]
	node52 -> node53 [label=target]
	node55 [label="55: Add" shape=box]
	node52 -> node55 [label=op]
	node56 [label="56: Name" shape=box]
	node57 [label="57: Load" shape=box]
	node56 -> node57 [label=ctx]
	node52 -> node56 [label=value]
	node34 -> node52 [label="body[]"]
	node0 -> node34 [label="body[]"]
}
